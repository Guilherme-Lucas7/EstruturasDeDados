
Listas Encadeadas de dados, é um conjunto de nós ligados um ao outro, formando um sequência. 
Ela permite armazenar um número de elementos limitado apenas pela memória disponível.
Elas podem ser utilizadas para tarefas mais complexas, como o gerenciamento do ciclo de vida de um aplicativo do sistema operacional.

--------------------------------------------------------------

Uma lista encadeada é uma estrutura de dados fundamental na programação, especialmente em Python. 
Ela consiste em uma sequência de elementos, onde cada elemento é chamado de nó e contém um valor e uma referência para o próximo nó da lista. 
Diferentemente de uma lista convencional, onde os elementos estão armazenados em posições contíguas na memória, em uma lista encadeada,
os nós podem estar dispersos em diferentes partes da memória, mas estão conectados por meio das referências.

A implementação de uma lista encadeada em Python envolve a criação de uma classe que represente os nós da listas e outra classe que represente a própria lista. 
Vamos ver um exemplo de implementação básica:


class No:
    def __init__(self, dado):
        self.dado = dado
        self.proximo = None  # Aponta para o próximo nó

class ListaEncadeada:
    def __init__(self):
        self.cabeca = None  # Primeiro nó da lista

    def inserir(self, dado):
        novo_no = No(dado)
        if self.cabeca is None:
            self.cabeca = novo_no  # Se a lista está vazia, o novo nó vira a cabeça
        else:
            atual = self.cabeca
            while atual.proximo:
                atual = atual.proximo  # Percorre até o último nó
            atual.proximo = novo_no  # Adiciona o novo nó ao final

    def exibir(self):
        atual = self.cabeca
        while atual:
            print(atual.dado, end=" -> ")
            atual = atual.proximo
        print("None")

# Exemplo de uso
lista = ListaEncadeada()
lista.inserir(1)
lista.inserir(2)
lista.inserir(3)

lista.exibir()  # Saída: 1 -> 2 -> 3 -> None
